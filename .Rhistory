# group latent factors together
loc_level <- cbind(us_lf$beta_0, ca_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "CA", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(glob_level)
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = FALSE, scale. = FALSE)
pr_curvature <- prcomp(loc_curvature, center = FALSE, scale. = FALSE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(glob_level)
View(de_yield_curve)
load("./Data/yield_curve_data.RData")
View(ca_yield_curve)
View(de_yield_curve)
View(ca_yield_curve)
View(jp_yield_curve)
View(de_yield_curve)
View(jp_yield_curve)
View(ca_yield_curve)
View(de_yield_curve)
View(jp_yield_curve)
View(uk_yield_curve)
View(jp_yield_curve)
View(ca_yield_curve)
View(uk_yield_curve)
View(us_yield_curve)
View(uk_yield_curve)
View(jp_yield_curve)
View(de_yield_curve)
View(ca_yield_curve)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- .64
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, ca_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "CA", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = FALSE, scale. = FALSE)
pr_curvature <- prcomp(loc_curvature, center = FALSE, scale. = FALSE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
xts.plot(glob_level)
plot.xts(glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, ca_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "CA", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = FALSE, scale. = FALSE)
pr_curvature <- prcomp(loc_curvature, center = FALSE, scale. = FALSE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(glob_level)
plot.xts(glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, ca_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "CA", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(glob_level)
plot.xts(-glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, ca_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "CA", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = FALSE, scale. = FALSE)
pr_curvature <- prcomp(loc_curvature, center = FALSE, scale. = FALSE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = FALSE, scale. = FALSE)
pr_curvature <- prcomp(loc_curvature, center = FALSE, scale. = FALSE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
plot.xts(-glob_level)
source('~/Repos/Diebold-et-al-2008-Replication/replication.R', echo=TRUE)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
pr_level$rotation[,"PC1"]
pr_level$rotation
pr_level
pr_level$x
plot.xts(pr_level$x[,"PC1"])
View(pr_level$x[,"PC1"])
plot(pr_level$x[,"PC1"])
plot(pr_level$x[,"PC1"], type = 'l')
View(loc_level)
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
plot(pr_level$x[,"PC1"])
plot(pr_level$x[,"PC1"], type =';')
plot(pr_level$x[,"PC1"], type ='l')
head(pr_level$x)
plot(-pr_level$x[,"PC1"], type ='l')
plot.xts(-pr_level$x[,"PC1"], type ='l')
plot.xts(-glob_level)
load("./Data/yield_curve_data.RData")
source("generate_latent_factors.R")
# estimate Nelson-Siegel latent factors
lambda <- 0.7308
us_lf <- get_lf(us_yield_curve, lambda)
ca_lf <- get_lf(ca_yield_curve, lambda)
jp_lf <- get_lf(jp_yield_curve, lambda)
de_lf <- get_lf(de_yield_curve, lambda)
uk_lf <- get_lf(uk_yield_curve, lambda)
# use latent factor data only for specified time period
start_date <- "Jul 1986"
end_date <- "Aug 2005"
us_lf <- us_lf[time(us_lf) >= start_date & time(us_lf) <= end_date]
ca_lf <- ca_lf[time(ca_lf) >= start_date & time(ca_lf) <= end_date]
jp_lf <- jp_lf[time(jp_lf) >= start_date & time(jp_lf) <= end_date]
de_lf <- de_lf[time(de_lf) >= start_date & time(de_lf) <= end_date]
uk_lf <- uk_lf[time(uk_lf) >= start_date & time(uk_lf) <= end_date]
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
colnames(loc_level) <- c("US", "JP", "DE", "UK")
loc_slope <- cbind(us_lf$beta_1, ca_lf$beta_1, jp_lf$beta_1, de_lf$beta_1, uk_lf$beta_1)
colnames(loc_slope) <- c("US", "CA", "JP", "DE", "UK")
loc_curvature <- cbind(us_lf$beta_2, ca_lf$beta_2, jp_lf$beta_2, de_lf$beta_2, uk_lf$beta_2)
colnames(loc_curvature) <- c("US", "CA", "JP", "DE", "UK")
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = FALSE)
pr_slope <- prcomp(loc_slope, center = TRUE, scale. = TRUE)
pr_curvature <- prcomp(loc_curvature, center = TRUE, scale. = TRUE)
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_slope <- loc_slope %*% pr_slope$rotation[,"PC1"]
glob_curvature <- loc_curvature %*% pr_curvature$rotation[,"PC1"]
glob_level <- as.xts(glob_level, order.by = time(us_lf))
glob_slope <- as.xts(glob_slope, order.by = time(us_lf))
glob_curvature <- as.xts(glob_curvature, order.by = time(us_lf))
plot.xts(-glob_level)
plot(loc_level)
plot(loc_slope)
whyyyyy
plot(loc_curvature)
plot(loc_curvature[,c("US", "DE", "JP")])
plot(loc_curvature[,c("US", "DE", "CA")])
plot(loc_curvature[,c("US", "DE", "CA", "UK")])
plot(loc_curvature[,c("US", "DE", "CA")])
pr_level
pr_level$rotation
pr_level
plot(pr_level)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_level
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_level
pr_level
# group latent factors together
loc_level <- cbind(us_lf$beta_0, jp_lf$beta_0, de_lf$beta_0, uk_lf$beta_0)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_level
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = FALSE)
pr_level
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
pr_level
pr_level <- prcomp(loc_level, center = TRUE, scale. = FALSE)
pr_level
plot(pr_level$x[,"PC1"])
plot(pr_level$x[,"PC1"], type = "l")
# calculate global factors
glob_level <- loc_level %*% pr_level$rotation[,"PC1"]
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
plot.xts(glob_level)
plot.xts(-glob_level)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
plot.xts(-glob_level)
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = FALSE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
plot.xts(-glob_level)
plot.xts(loc_level)
pr_level
plot(pr_level, type = 'l')
# perform PCA
pr_level <- prcomp(loc_level, center = FALSE, scale. = TRUE)
plot(pr_level, type = 'l')
pr_level
1.975*1.975
0.407*.407
library(stats)
prcomp(loc_level)
princomp(loc_level)
res <- princomp(loc_level)
res$loadings
res$scores
plot(res$scores[,"PC1"]
)
plot(res$scores[,"Comp.1"])
plot(res$scores[,"Comp.1"], type = 'l')
plot(-res$scores[,"Comp.1"], type = 'l')
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
plot.xts(-glob_level)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = FALSE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = FALSE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
pr_level
1.9**1.9
0.4823*.4823
0.3088400
0.3088400*.3088400
0.19*.19
3.38/(3.38+.23+.095+.036)
# perform PCA
pr_level <- prcomp(loc_level, center = TRUE, scale. = TRUE)
glob_level <- as.xts(pr_level$x[,"PC1"], order.by = time(us_lf))
plot.xts(glob_level, y = c(-4,4))
plot.xts(-glob_level, y = c(-4,4))
plot.xts(-glob_level, ylim = c(-4,4))
plot.xts(-glob_level, ylim = c(-4,4), yaxis.same = TRUE)
plot.xts(-glob_level, ylim = c(-4,4))
axis(2, tck = -4:4)
-4:4
plot.xts(-glob_level, ylim = c(-4,4), aspect = 1)
library(zoom)
install.packages("zoom")
library(zoom)
zm()
zm()
abline(h = 3)
abline(h = -3)
plot(-glob_level)
plot(-glob_level, ylim = c(-4,4))
plot(-glob_level, ylim = c(-2,4))
plot(-glob_level, ylim = c(-2,2))
